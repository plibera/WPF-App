<UserControl x:Class="wpf_piotr_libera.Views.ShapeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:wpf_piotr_libera.Views"
             xmlns:local1="clr-namespace:wpf_piotr_libera.Models.Validation"
             xmlns:local2="clr-namespace:wpf_piotr_libera.ViewModels"
             mc:Ignorable="d">
    <UserControl.Resources>
        <local2:InverseAndBooleansToBooleanConverter x:Key ="InverseAndBooleansToBooleanConverter"/>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
    </UserControl.Resources>
    
    
    <Grid MinHeight="232" MinWidth="260">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="85" />
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="32*" />
            <RowDefinition Height="32*" />
            <RowDefinition Height="32*" />
            <RowDefinition Height="32*" />
            <RowDefinition Height="32*" />
            <RowDefinition Height="32*" />
            <RowDefinition Height="40*" />
        </Grid.RowDefinitions>
        <Label Grid.Column="0" Grid.Row="0" Content="Color"  Height="26" VerticalAlignment="Center" HorizontalAlignment="Right" Width="38"/>
        <Label Grid.Column="0" Grid.Row="1" Content="Type" Height="26" VerticalAlignment="Center" HorizontalAlignment="Right" Width="35"/>
        <Label Grid.Column="0" Grid.Row="2" Content="X Coordinate" Height="26" VerticalAlignment="Center" HorizontalAlignment="Right" Width="80"/>
        <Label Grid.Column="0" Grid.Row="3" Content="Y Coordinate" Height="26" VerticalAlignment="Center" HorizontalAlignment="Right" Width="78"/>
        <Label Grid.Column="0" Grid.Row="4" Content="Area" Height="26" VerticalAlignment="Center" HorizontalAlignment="Right" Width="34"/>
        <Label Grid.Column="0" Grid.Row="5" Content="Text" Height="26" VerticalAlignment="Center" HorizontalAlignment="Right" Width="30"/>
        <TextBox x:Name="ColorTextbox" Grid.Column="1" Grid.Row="0" TextWrapping="Wrap" Height="23" VerticalAlignment="Center" Margin="5,0,10,0">
            <TextBox.Text>
                <Binding Path ="Color" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local1:ColorRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox Grid.Column="1" Grid.Row="1" Height="23" Margin="5, 0, 10, 0" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Type}"/>
        <TextBox x:Name="XCoordTextbox" Grid.Column="1" Grid.Row="2" Height="23" Margin="5, 0, 10, 0" VerticalAlignment="Center" TextWrapping="Wrap">
            <TextBox.Text>
                <Binding Path ="XCoordinate" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local1:NumericRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox x:Name="YCoordTextbox" Grid.Column="1" Grid.Row="3" Height="23" Margin="5, 0, 10, 0" VerticalAlignment="Center" TextWrapping="Wrap">
            <TextBox.Text>
                <Binding Path ="YCoordinate" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local1:NumericRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox x:Name="AreaTextbox" Grid.Column="1" Grid.Row="4" Height="23" Margin="5, 0, 10, 0" VerticalAlignment="Center" TextWrapping="Wrap">
            <TextBox.Text>
                <Binding Path ="Area" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local1:NumericRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox Grid.Column="1" Grid.Row="5" Height="23" Margin="5, 0, 10, 0" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Text}"/>

        <Grid Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" 
                    Content="Ok"
                    Command="{Binding Path=OkCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"
                    HorizontalAlignment="Center"
                    Margin="0, 0, 10, 0"
                    VerticalAlignment="Center"
                    Width="75" Height="19">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource InverseAndBooleansToBooleanConverter}" Mode="TwoWay">
                        <Binding ElementName="ColorTextbox" Path="(Validation.HasError)" />
                        <Binding ElementName="XCoordTextbox" Path="(Validation.HasError)" />
                        <Binding ElementName="YCoordTextbox" Path="(Validation.HasError)" />
                        <Binding ElementName="AreaTextbox" Path="(Validation.HasError)" />
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
            <Button Grid.Column="1"  Content="Cancel" Command="{Binding Path=CancelCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" HorizontalAlignment="Center" Margin="10, 0, 0, 0" VerticalAlignment="Center" Width="75" Height="19"/>
        </Grid>
    </Grid>
</UserControl>
